qnorm(.10)
qnorm(.55)
qnorm(.56)
pnorm(0)
qnorm(.0001)
qnorm(.1/2)
qnorm(1-.1/2)
qnorm(.05/2)
qnorm(1-.05/2)
x <- rchi(10000)
?rchi()
x <- rchisq(10000)
x <- rchisq(10000, 10)
p <- dchisq(x, 10)
plot(x,p, type = "l")
plot(x,p)
abline(mean(x))
abline(v = mean(x))
qpois(3, 0.1, lower.tail = F)
ppois(3, 1, lower.tail = FALSE)
ppois(2, 1, lower.tail = FALSE)
x <- rnorm(1000,50,3)
y <- dnorm(x,50,3)
plot(x,y)
plot(x,y,type="l")
plot(x,y)
x
x2 <- (x-mean(x))/sd(x)
x2
mean(x2)
sd(x2)
x2 >= 3*sd(x2)
sum(x2 >= 3*sd(x2))
sum(x2 <= -3*sd(x2))
X <- runif(10,20,50)
Y <- runif(10,45,60)
sum(X)/10
X
Y
mean(X)
var(X)
mean(X)
var(X)
mean(Y)
var(Y)
cov(X,Y)
cov(X,Y)/sqrt(var(X)*var(Y))
cor(X,Y)
plot(X,Y, pch=15,col=4)
plot(X,Y)
plot(1:10, -(1:10))
plot(1:10, -(1:10),type="l")
plot(1:10, -(1:10),type="l",col=4)
plot(1:10, -(1:10),type="l",col=4)
pnorm(0.025,1,1)
pexp(0.025,1,1)
qnorm(.975)
qnorm(.975)/.1
(qnorm(.975)/.1)^2
pnorm(10)
pnorm(2.4)
qnorm(.9918)
x <- rnorm(5,50,3)
x
qnorm(0.05)
mean(x)
49/sqrt(3)
pnorm(.335)
pnorm(-1.28)
pnorm(0.36)
0.1002725+1-0.6405764
ppois(10*.1)
ppois(.1)
?ppois()
ppois(2,.1)
ppois(2,10*.1)
10*.1
.919686-1
qnorm(0.05, lower.tail = FALSE)
employess <- c(10,35,140,300,370,320,200,75,35,15)
hist(employess, break = (18,38, by = 2), main = "Histogram of Number of Employees", xlab = "Groups", ylab = "Frequency")
employess
hist(employess, break = (18,38, by = 2), main = "Histogram of Number of Employees", xlab = "Groups", ylab = "Frequency")
hist(employess, breaks = (18,38, by = 2), main = "Histogram of Number of Employees", xlab = "Groups", ylab = "Frequency")
hist(employess, breaks = seq(18,38, by = 2), main = "Histogram of Number of Employees", xlab = "Groups", ylab = "Frequency")
hist(employess)
salary = c("18-20","20-22","22-24","24-26","26-28","28-30","30-32","32-34","34-36","36-38")
employess <- c(10,35,140,300,370,320,200,75,35,15)
values <- rep(as.numeric(salary), employess)
values
hist(employess,breaks = seq(18,38, by = 2))
seq(18,38,2)
seq(18,36,2)
hist(employess,breaks = seq(18,36,2)))
hist(employess,breaks = seq(18,36,2))
length(employess)
length(seq(18,36,2))
hist(employess)
pchisq(0.319,3)
pchisq(0.319,3, lower.tail = T)
pchisq(0.319,3, lower.tail = F)
pchisq(47.995,1)
pchisq(47.995,1,lower.tail = F)
knitr::opts_chunk$set(echo = FALSE)
if(!requireNamespace("biocManager", quietly = T))
install.packages("biocManager")
BiocManager::install("biobroom")
BiocManager::install("drosophila2.db")
library(affy)
library(drosophila2.db)
library(biobroom)
library(limma)
library(affyPLM)
library(dplyr)
library(affy)
library(drosophila2.db)
library(biobroom)
library(limma)
library(affyPLM)
library(dplyr)
celFiles <- list.celfiles(path = "../03_labs/02_lab2/data", full.names = TRUE)
data.affy <- ReadAffy(filenames = celFiles)
data.affy <- ReadAffy(filenames = celFiles)
data.affy
data.affy <- ReadAffy(filenames = celFiles)
data.affy <- ReadAffy(filenames = celFiles)
data.affy
data.affy[,c(1,2,3,13,14,15)]
data.affy %>% filter(c(1,2,3,13,14,15))
data.affy %>% select(1,2,3,13,14,15)
data.affy <- data.affy[,c(1,2,3,13,14,15)]
MAplot(data.affy, pairs = T, plot.method = "smoothScatter")
boxplot(data.affy, col=c(1:6))
data.rma <- rma(data.affy)
data.rma <- rma(data.affy)
expr.rma <- exprs(data.rma)
MAplot(data.rma, pais = T, plot.method = "smoothScatter")
boxplot(data.frame(expr.rma), col = c(1:6))
head(expr.rma)
sensitive <- c(0,0,0,1,1,1)
design.matrix <- model.matrix(~sensitive)
design.matrix
limma_fit <- lmFit(expr.rma, design.matrix) %>%
eBayes() %>%
tidy() %>%
mutate(fdr = p.adjust(p.value, method = "fdr")) %>%
arrange(p.value)
head(limma_fit)
p.adjust(limma_fit$p.value)
p.adjust(limma_fit$p.value, method = "fdr")
p.adjust(limma_fit$p.value, method = "fdr") %>% head()
limma_fit %>% filter(fdr <= 0.05, abs(estimate) > log2(1.5)) %>% head()
limma_fit %>% filter(fdr <= 0.05, abs(estimate) > log2(1.5))
limma_fit <- lmFit(expr.rma, design.matrix) %>%
eBayes() %>%
tidy() %>%
mutate(fdr = p.adjust(p.value, method = "fdr")) %>%
arrange(p.value)
head(limma_fit)
limma_fit %>% filter(fdr <= 0.05, abs(estimate) > log2(1.5))
fit_limma <- function(expr_matrix, design_matrix){
fit <- lmFit(expr_matrix, design_matrix) %>%
eBayes() %>%
tidy() %>%
mutate(fdr = p.adjust(p.value, method = "fdr")) %>%
arrange(p.value)
return(fit)
}
fit_limma(expr.rma, design.matrix)
DS_genes <- fit_limma(expr.rma, design.matrix)
head(DS_genes)
dim(DS_genes)
dim(expr.rma)
DS_genes$term %>% table()
Sys.which("make")
getwd()
getwd()
install.packages("colorspace")
# devtools::install_github("cole-trapnell-lab/monocle3")
devtools::install_github("cole-trapnell-lab/monocle3@1.0.0")
BiocManager::install("Matrix.utils")
Sys.which("make")
Sys.which("gcc")
library(pkgbuild)
rtools_version()
library(pkgbuild)
rtools_version()
Sys.which("make")
Sys.which("gcc")
library(Rcpp)
#include <Rcpp.h>
using namespace Rcpp;
getwd()
*/
#include <Rcpp.h>
using namespace Rcpp;
#include <Rcpp.h>
using namespace Rcpp;
getwd()
.libPaths()
n.parents <- c(male = 15L,
female = 10L)
n.parents
data()
knitr::opts_chunk$set(echo = FALSE)
df <- BOD
print(head(df))
install.packages("ggplot2")
install.packages("dplyr")
add_nums <- function(a, b){
return(a + b)
}
source("./test_add.R")
add_nums(55, 32)
?add_nums()
x <- rnorm(10)
y <- pnorm(x)
plot(x,y)
x <- rnorm(1000)
y <- pnorm(x)
plot(x,y)
x2 <- round(x)
x2
x2 <- round(x+10)
x2
table(x2)
tab <- table(x2)
tab[1]
tab[1][1]
table
tab
y <- rep(0,8)
for(i in 6:14){
y[i] <- mean(x2 <= i)
}
y <- rep(0,8)
for(i in 6:14){
y[i] <- mean(x2 <= i)
}
plot(x2,y)
y
plot(y)
set.seed(42)
X <- sort(rnorm(50, 50, 2))
y <- dnorm(x)
X <- sort(rnorm(50, 50, 2))
y <- dnorm(x)
x <- sort(rnorm(50, 50, 2))
y <- dnorm(x)
plot(x,y)
y <- dnorm(x, 50, 2)
plot(x,y)
plot(x,y, type = "l")
abline(hline = 50)
abline(h = 50)
plot(x,y, type = "l")
abline(h = 50)
line(h = 50)
set.seed(42)
x <- sort(rnorm(50, 50, 2))
y <- dnorm(x, 50, 2)
plot(x, y, type = "l")
abline(h = 50)
plot(x, y, type = "l")
abline(h = 50)
abline(v = 50)
z = (x - mean(x))/sd(x)
z = (x - mean(x))/sd(x)
plot(z, y, type = "l")
abline(v = 0)
abline(v = 0.05/2, col = "r")
abline(v = 0.05/2, col = "red")
abline(v = pnorm(0.05/2), col = "red")
abline(v = pnorm(-0.05/2), col = "red")
abline(v = -2, col = "red")
z = (x - mean(x))/sd(x)
plot(z, y, type = "l")
abline(v = 0)
abline(v = -3, col = "red")
abline(v = 3, col = "red")
plot(z, y, type = "l")
abline(v = 0)
abline(v = -3, col = "red")
abline(v = 3, col = "red")
abline(v = -2, col = "red")
abline(v = 2, col = "red")
zcals = mean(z)
abline(zcal, col = "blue")
zcals = mean(z)
abline(zcal, col = "blue")
zcal = mean(z)
abline(zcal, col = "blue")
abline(v = zcal, col = "blue")
abline(v = -2.05, col = "blue")
abline(v = 2.05, col = "blue")
alphaleft <- pnorm(-2)
alpharight <- 1-pnorm(2)
pnorm(-2.05)
pnorm(-2.05) > alphaleft + alpharight
getwd()
getwd()
setwd("G:/002_Mabia_apu/001_Shourav_Vai/Chatper01")
setwd("G:/002_Mabia_apu/001_Shourav_Vai/Chatper01")
setwd("G:/002_Mabia_apu/001_Shourav_Vai/Chatper01")
getwd()
?mean()
help(mean)
?mean()
help(mean)
install.packages("lme4")
library(lme4)
detach("package:lme4", unload = TRUE)
library(lme4)
4+5
"a"+5
x = 2 * 5 ^ 2
print(x)
x
x
2 * 5
5 ^ 2
x = 2 * 5 ^ 2
1 & 1
1 & 0
1 | 1
1 | 0
!0
c(1,2,3,4) > 2
1 && 1
0 || 1
y <- 2 + 5
x = 2 + 5
y = x + 1
x = 10
y = x + 1
val = 0.1
val = 0.1
list1 = c(TRUE, 0.1, "apple")
print(val %in% list1)
mat = matrix(c(1,2,3,4,5,6),nrow=2,ncol=3)
print (mat)
2+4
z = 2+4
z = 2+4
z = z + 10
z
z
~!@#$%^&*
ls()
ls(pattern = "x")
rm(x)
rm(list = ls())
x = 2 * 5 ^ 2
print(x)
x
1 & 1
1 & 0
1 | 1
1 | 0
TRUE & TRUE
!0
c(1,2,3,4) > 2
1 && 1
0 || 1
x = 2 + 5
y <- 2 + 5 # Alt + -
x = 10
y = x + 1
val = 0.1
list1 = c(TRUE, 0.1, "apple")
print(val %in% list1)
mat = matrix(c(1,2,3,4,5,6),nrow=2,ncol=3)
print (mat)
print( t(mat))
pro = mat %*% t(mat)
print(pro)
val = 0.1
z = 2+4
z = z + 10
z
# ~!@#$%^&*
# reserved keywards: for, if, else
ls()
ls(pattern = "x")
rm(x)
rm(list = ls())
x = 2 * 5 ^ 2
print(x)
x
1 & 1
1 & 0
1 | 1
1 | 0
TRUE & TRUE
!0
c(1,2,3,4) > 2
1 && 1
0 || 1
x = 2 + 5
y <- 2 + 5 # Alt + -
x = 10
y = x + 1
val = 0.1
list1 = c(TRUE, 0.1, "apple")
print(val %in% list1)
mat = matrix(c(1,2,3,4,5,6),nrow=2,ncol=3)
print (mat)
print( t(mat))
pro = mat %*% t(mat)
print(pro)
val = 0.1
z = 2+4
z = z + 10
z
# ~!@#$%^&*
# reserved keywards: for, if, else
# ls()
# ls(pattern = "x")
# rm(x)
#
# rm(list = ls())
data()
data("women")
women
df = data(ChickWeight)
df
df = data("ChickWeight")
df
data("ChickWeight")
ChickWeight
x = 12
mode(x)
name = "Neaz"
class(name)
firstname = "Neaz"
secondname = "Ali"
class(firstname)
class(secondname)
model(firstname)
mode(firstname)
source("G:/002_Mabia_apu/001_Shourav_Vai/Chatper01/day2.R", echo=TRUE)
firstname + secondname
# firstname+ secondname
paste(firstname, secondname)
class(women)
# Vector
name = c("Shouruv", "Neaz")
name
class(name)
class(1:10)
class(pro)
ages = c(33,22,34,55,22,11,23)
ages
ls(pattern = "ages")
1:10
1:100
1:1000000
Vec2 = LETTERS[1:10]
Vec2
Vec1 = 1:10
mat1 = matrix(vec1, ncol = 2, nrow = 5)
mat1 = matrix(Vec1, ncol = 2, nrow = 5)
# mat1 = matrix(vec1, ncol = 2, nrow = 5)
parint(mat1)
# mat1 = matrix(vec1, ncol = 2, nrow = 5)
parint(mat1)
# mat1 = matrix(vec1, ncol = 2, nrow = 5)
print(mat1)
Vec1
dim(mat1)
person1 = list("Neaz", 26, FALSE, TRUE, 3.45)
person1
View(ChickWeight)
View(ChickWeight)
rep(5,100)
LETTERS[1:3]
charVec = rep(LETTERS[1:3], 10)
print(charVec)
table(charVec)
class(charVec)
fac1 = factor(charVec)
print(fac1)
levels(fac1)
table(fac1)
class(fac1)
attributes(fac1)
attributes(1)
attributes(x = 1)
# attributes(x = 1) # attributes is only for factors
Vec1
length(Vec1)
vec3 <- rep(5, int(rnorm(100)))
vec3 <- rep(5, as.int(rnorm(100)))
vec3 <- rep(5, as.integer(rnorm(100)))
vec3 <- rep(5, as.integer(rnorm(100)))
as.inte
num <- rnorm(1, 10000,2)
num
num <- as.integer(rnorm(1, 10000,2))
num
num <- as.integer(rnorm(1, 10000,2))
vec3 <- rep(5, num)
vec3
length(vec3)
num <- as.integer(rnorm(1, 10000,2))
vec3 <- rep(5, num)
length(vec3)
num <- as.integer(rnorm(1, 10000,2))
vec3 <- rep(5, num)
length(vec3)
vec3
length(vec3)
